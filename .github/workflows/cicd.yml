name: User Service Docker CICD

on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t vkr-user-service:latest .

      - name: Save Docker image as tar
        run: |
          docker save -o vkr-user-service.tar vkr-user-service:latest

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vkr-user-service
          path: vkr-user-service.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: vkr-user-service
          path: .

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
          CONFIG_HOST: ${{ secrets.CONFIG_HOST }}
          EUREKA_HOST: ${{ secrets.EUREKA_HOST }}
          CONFIG_GITHUB_LABEL: ${{ secrets.CONFIG_GITHUB_LABEL }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

          # Копируем Docker-образ на сервер
          scp ./vkr-user-service/vkr-user-service.tar $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH

          # Загружаем Docker-образ и запускаем контейнер
          ssh $REMOTE_USER@$REMOTE_HOST << EOF
            set -x
            cd $REMOTE_PATH
            docker load -i vkr-user-service.tar
            docker stop vkr-user-service || true
            docker rm vkr-user-service || true
            docker run --name vkr-user-service -d -p 8080:8080 -e CONFIG_HOST=$CONFIG_HOST -e CONFIG_GITHUB_LABEL=$CONFIG_GITHUB_LABEL -e EUREKA_HOST=$EUREKA_HOST vkr-user-service:latest
            exit
          EOF