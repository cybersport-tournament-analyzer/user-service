name: User Service Docker CICD

on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/vkr-user-service:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/vkr-user-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
          CONFIG_HOST: ${{ secrets.CONFIG_HOST }}
          EUREKA_HOST: ${{ secrets.EUREKA_HOST }}
          CONFIG_GITHUB_LABEL: ${{ secrets.CONFIG_GITHUB_LABEL }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

          # Авторизация в Docker Hub на удалённом сервере
          ssh $REMOTE_USER@$REMOTE_HOST << EOF
            set -x
            echo "$DOCKER_HUB_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
            cd $REMOTE_PATH
            docker pull $DOCKER_HUB_USERNAME/vkr-user-service:latest
            docker stop vkr-user-service || true
            docker rm vkr-user-service || true
            docker run --name vkr-user-service -d -p 8080:8080 -e CONFIG_HOST=$CONFIG_HOST -e CONFIG_GITHUB_LABEL=$CONFIG_GITHUB_LABEL -e EUREKA_HOST=$EUREKA_HOST $DOCKER_HUB_USERNAME/vkr-user-service:latest
            exit
          EOF